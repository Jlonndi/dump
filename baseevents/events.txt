TriggerServerEvent('baseevents:enteringVehicle', netId, seat, class, model)
TriggerServerEvent('baseevents:enteringAborted')
TriggerServerEvent('baseevents:enteredVehicle', netId, CurrentSeat, name, class, model)
TriggerServerEvent('baseevents:leftVehicle', netId, PreviousSeat, name, class, model)
TriggerServerEvent('baseevents:leftVehicle', previousNetId, PreviousSeat, previousName, previousClass, previousModel)
TriggerServerEvent('baseevents:enteredVehicle', currentNetId, CurrentSeat, currentName, currentClass, currentModel)
TriggerServerEvent('baseevents:vehicleChangedSeat', netId, CurrentSeat, PreviousSeat)
TriggerServerEvent('baseevents:vehicleHotreload', CurrentVehicle, CurrentSeat, IsEngineOn)
TriggerServerEvent(res .. evname, resource)
TriggerEvent('baseevents:enteringVehicle', vehicleIsTryingToEnter, seat, class, model)
TriggerEvent('baseevents:enteringAborted')
TriggerEvent('baseevents:enteredVehicle', vehicle, CurrentSeat, name, class, model)
TriggerEvent('baseevents:leftVehicle', PreviousVehicle, PreviousSeat, name, class, model)
TriggerEvent('baseevents:leftVehicle', PreviousVehicle, PreviousSeat, previousName, previousClass, previousModel)
TriggerEvent('baseevents:enteredVehicle', CurrentVehicle, CurrentSeat, currentName, currentClass, currentModel)
TriggerEvent('baseevents:vehicleChangedSeat', CurrentVehicle, CurrentSeat, PreviousSeat)
TriggerEvent('baseevents:vehicleEngineOn', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:vehicleEngineOff', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:leavingVehicle', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:leavingAborted', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:vehicleCrashed', CurrentVehicle, CurrentSeat, CurrentSpeed, PreviousSpeed, velocity, healthChange, heavyImpact, minorImpact)
TriggerEvent('baseevents:vehicleSpeeding', true, CurrentVehicle, CurrentSeat, CurrentSpeed)
TriggerEvent('baseevents:vehicleSpeeding', false, CurrentVehicle, CurrentSeat, CurrentSpeed)
TriggerEvent('baseevents:vehicleHotreload', CurrentVehicle, CurrentSeat, IsEngineOn)
TriggerEvent(res .. evname, resource)
TriggerServerEvent('baseevents:enteringVehicle', netId, seat, class, model)
TriggerServerEvent('baseevents:enteringAborted')
TriggerServerEvent('baseevents:enteredVehicle', netId, CurrentSeat, name, class, model)
TriggerServerEvent('baseevents:leftVehicle', netId, PreviousSeat, name, class, model)
TriggerServerEvent('baseevents:leftVehicle', previousNetId, PreviousSeat, previousName, previousClass, previousModel)
TriggerServerEvent('baseevents:enteredVehicle', currentNetId, CurrentSeat, currentName, currentClass, currentModel)
TriggerServerEvent('baseevents:vehicleChangedSeat', netId, CurrentSeat, PreviousSeat)
TriggerServerEvent('baseevents:vehicleHotreload', CurrentVehicle, CurrentSeat, IsEngineOn)
TriggerServerEvent(res .. evname, resource)
TriggerEvent('baseevents:enteringVehicle', vehicleIsTryingToEnter, seat, class, model)
TriggerEvent('baseevents:enteringAborted')
TriggerEvent('baseevents:enteredVehicle', vehicle, CurrentSeat, name, class, model)
TriggerEvent('baseevents:leftVehicle', PreviousVehicle, PreviousSeat, name, class, model)
TriggerEvent('baseevents:leftVehicle', PreviousVehicle, PreviousSeat, previousName, previousClass, previousModel)
TriggerEvent('baseevents:enteredVehicle', CurrentVehicle, CurrentSeat, currentName, currentClass, currentModel)
TriggerEvent('baseevents:vehicleChangedSeat', CurrentVehicle, CurrentSeat, PreviousSeat)
TriggerEvent('baseevents:vehicleEngineOn', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:vehicleEngineOff', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:leavingVehicle', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:leavingAborted', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:vehicleCrashed', CurrentVehicle, CurrentSeat, CurrentSpeed, PreviousSpeed, velocity, healthChange, heavyImpact, minorImpact)
TriggerEvent('baseevents:vehicleSpeeding', true, CurrentVehicle, CurrentSeat, CurrentSpeed)
TriggerEvent('baseevents:vehicleSpeeding', false, CurrentVehicle, CurrentSeat, CurrentSpeed)
TriggerEvent('baseevents:vehicleHotreload', CurrentVehicle, CurrentSeat, IsEngineOn)
TriggerEvent(res .. evname, resource)
TriggerServerEvent('baseevents:enteringVehicle', netId, seat, class, model)
TriggerServerEvent('baseevents:enteringAborted')
TriggerServerEvent('baseevents:enteredVehicle', netId, CurrentSeat, name, class, model)
TriggerServerEvent('baseevents:leftVehicle', netId, PreviousSeat, name, class, model)
TriggerServerEvent('baseevents:leftVehicle', previousNetId, PreviousSeat, previousName, previousClass, previousModel)
TriggerServerEvent('baseevents:enteredVehicle', currentNetId, CurrentSeat, currentName, currentClass, currentModel)
TriggerServerEvent('baseevents:vehicleChangedSeat', netId, CurrentSeat, PreviousSeat)
TriggerServerEvent('baseevents:vehicleHotreload', CurrentVehicle, CurrentSeat, IsEngineOn)
TriggerServerEvent(res .. evname, resource)
TriggerEvent('baseevents:enteringVehicle', vehicleIsTryingToEnter, seat, class, model)
TriggerEvent('baseevents:enteringAborted')
TriggerEvent('baseevents:enteredVehicle', vehicle, CurrentSeat, name, class, model)
TriggerEvent('baseevents:leftVehicle', PreviousVehicle, PreviousSeat, name, class, model)
TriggerEvent('baseevents:leftVehicle', PreviousVehicle, PreviousSeat, previousName, previousClass, previousModel)
TriggerEvent('baseevents:enteredVehicle', CurrentVehicle, CurrentSeat, currentName, currentClass, currentModel)
TriggerEvent('baseevents:vehicleChangedSeat', CurrentVehicle, CurrentSeat, PreviousSeat)
TriggerEvent('baseevents:vehicleEngineOn', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:vehicleEngineOff', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:leavingVehicle', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:leavingAborted', CurrentVehicle, CurrentSeat)
TriggerEvent('baseevents:vehicleCrashed', CurrentVehicle, CurrentSeat, CurrentSpeed, PreviousSpeed, velocity, healthChange, heavyImpact, minorImpact)
TriggerEvent('baseevents:vehicleSpeeding', true, CurrentVehicle, CurrentSeat, CurrentSpeed)
TriggerEvent('baseevents:vehicleSpeeding', false, CurrentVehicle, CurrentSeat, CurrentSpeed)
TriggerEvent('baseevents:vehicleHotreload', CurrentVehicle, CurrentSeat, IsEngineOn)
TriggerEvent(res .. evname, resource)
